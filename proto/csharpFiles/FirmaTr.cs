// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FirmaTr.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from FirmaTr.proto</summary>
public static partial class FirmaTrReflection {

  #region Descriptor
  /// <summary>File descriptor for FirmaTr.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static FirmaTrReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1GaXJtYVRyLnByb3RvIjYKBFVzZXISDgoGVXNlcklkGAEgASgJEgwKBE5h",
          "bWUYAiABKAkSEAoIUGFzc3dvcmQYAyABKAkiMAoERGF0ZRILCgNkYXkYASAB",
          "KAUSDQoFbW9udGgYAiABKAUSDAoEeWVhchgDIAEoBSIkCgRUaW1lEgwKBGhv",
          "dXIYASABKAUSDgoGbWludXRlGAIgASgFIlsKCEN1cnNhRFRPEgsKA2xvYxgB",
          "IAEoCRILCgNqdWQYAiABKAkSCwoDdGFyGAMgASgJEhMKBGRhdGUYBCABKAsy",
          "BS5EYXRlEhMKBHRpbWUYBSABKAsyBS5UaW1lImkKBUN1cnNhEg8KB0N1cnNh",
          "SWQYASABKAUSFAoMRGVzdGluYXRpZUlkGAIgASgFEhMKBERhdGEYAyABKAsy",
          "BS5EYXRlEhIKA09yYRgEIAEoCzIFLlRpbWUSEAoITnJMb2N1cmkYBSABKAUi",
          "UwoKRGVzdGluYXRpZRIUCgxEZXN0aW5hdGllSWQYASABKAUSEgoKTG9jYWxp",
          "dGF0ZRgCIAEoCRINCgVKdWRldBgDIAEoCRIMCgRUYXJhGAQgASgJIkkKD0N1",
          "cnNhRGVzdGluYXRpZRIVCgVjdXJzYRgBIAEoCzIGLkN1cnNhEh8KCmRlc3Rp",
          "bmF0aWUYAiABKAsyCy5EZXN0aW5hdGllImAKCVJlemVydmFyZRITCgtSZXpl",
          "cnZhcmVJZBgBIAEoBRIPCgdDdXJzYUlkGAIgASgFEhIKCk51bWVDbGllbnQY",
          "AyABKAkSGQoRTnJMb2N1cmlSZXplcnZhdGUYBCABKAUiSAoDTG9jEg0KBUxv",
          "Y0lkGAEgASgFEg0KBU5yTG9jGAIgASgFEhIKCk51bWVDbGllbnQYAyABKAkS",
          "DwoHQ3Vyc2FJZBgEIAEoBSKpAgoHUmVxdWVzdBIbCgR0eXBlGAEgASgOMg0u",
          "UmVxdWVzdC5UeXBlEhAKCHVzZXJuYW1lGAIgASgJEhMKBHVzZXIYAyABKAsy",
          "BS5Vc2VyEhcKA3JlehgEIAEoCzIKLlJlemVydmFyZRIfCgVjdXJzZRgFIAMo",
          "CzIQLkN1cnNhRGVzdGluYXRpZRIbCghjdXJzYWR0bxgGIAEoCzIJLkN1cnNh",
          "RFRPEhUKBWN1cnNhGAcgASgLMgYuQ3Vyc2EibAoEVHlwZRIJCgVMT0dJThAA",
          "EgoKBkxPR09VVBABEg0KCUdFVF9DVVJTRRACEg4KCkdFVF9MT0NVUkkQAxIR",
          "Cg1BRERfUkVaRVJWQVJFEAQSDAoIR0VUX1VTRVIQBRINCglHRVRfQ1VSU0EQ",
          "BiKfAgoIUmVzcG9uc2USHAoEdHlwZRgBIAEoDjIOLlJlc3BvbnNlLlR5cGUS",
          "DQoFZXJyb3IYAiABKAkSEwoEdXNlchgDIAEoCzIFLlVzZXISCgoCb2sYBCAB",
          "KAkSHwoFY3Vyc2UYBSADKAsyEC5DdXJzYURlc3RpbmF0aWUSFQoFY3Vyc2EY",
          "BiABKAsyBi5DdXJzYRIUCgZsb2N1cmkYByADKAsyBC5Mb2MidwoEVHlwZRIG",
          "CgJPSxAAEgkKBUVSUk9SEAESDQoJR0VUX0NVUlNFEAISEwoPQURERURfUkVa",
          "RVJWQVJFEAMSDgoKR0VUX0xPQ1VSSRAEEgsKB1VQREFURUQQBRINCglHRVRf",
          "Q1VSU0EQBhIMCghHRVRfVVNFUhAHQhJCEEZpcm1hVHJQcm90b2J1ZnNiBnBy",
          "b3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::User), global::User.Parser, new[]{ "UserId", "Name", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Date), global::Date.Parser, new[]{ "Day", "Month", "Year" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Time), global::Time.Parser, new[]{ "Hour", "Minute" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CursaDTO), global::CursaDTO.Parser, new[]{ "Loc", "Jud", "Tar", "Date", "Time" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Cursa), global::Cursa.Parser, new[]{ "CursaId", "DestinatieId", "Data", "Ora", "NrLocuri" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Destinatie), global::Destinatie.Parser, new[]{ "DestinatieId", "Localitate", "Judet", "Tara" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CursaDestinatie), global::CursaDestinatie.Parser, new[]{ "Cursa", "Destinatie" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Rezervare), global::Rezervare.Parser, new[]{ "RezervareId", "CursaId", "NumeClient", "NrLocuriRezervate" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Loc), global::Loc.Parser, new[]{ "LocId", "NrLoc", "NumeClient", "CursaId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Request), global::Request.Parser, new[]{ "Type", "Username", "User", "Rez", "Curse", "Cursadto", "Cursa" }, null, new[]{ typeof(global::Request.Types.Type) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Response), global::Response.Parser, new[]{ "Type", "Error", "User", "Ok", "Curse", "Cursa", "Locuri" }, null, new[]{ typeof(global::Response.Types.Type) }, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class User : pb::IMessage<User> {
  private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User(User other) : this() {
    userId_ = other.userId_;
    name_ = other.name_;
    password_ = other.password_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User Clone() {
    return new User(this);
  }

  /// <summary>Field number for the "UserId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Name != other.Name) return false;
    if (Password != other.Password) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Date : pb::IMessage<Date> {
  private static readonly pb::MessageParser<Date> _parser = new pb::MessageParser<Date>(() => new Date());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Date> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date(Date other) : this() {
    day_ = other.day_;
    month_ = other.month_;
    year_ = other.year_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date Clone() {
    return new Date(this);
  }

  /// <summary>Field number for the "day" field.</summary>
  public const int DayFieldNumber = 1;
  private int day_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Day {
    get { return day_; }
    set {
      day_ = value;
    }
  }

  /// <summary>Field number for the "month" field.</summary>
  public const int MonthFieldNumber = 2;
  private int month_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Month {
    get { return month_; }
    set {
      month_ = value;
    }
  }

  /// <summary>Field number for the "year" field.</summary>
  public const int YearFieldNumber = 3;
  private int year_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Year {
    get { return year_; }
    set {
      year_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Date);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Date other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Day != other.Day) return false;
    if (Month != other.Month) return false;
    if (Year != other.Year) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Day != 0) hash ^= Day.GetHashCode();
    if (Month != 0) hash ^= Month.GetHashCode();
    if (Year != 0) hash ^= Year.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Day != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Day);
    }
    if (Month != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Month);
    }
    if (Year != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Year);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Day != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
    }
    if (Month != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
    }
    if (Year != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Date other) {
    if (other == null) {
      return;
    }
    if (other.Day != 0) {
      Day = other.Day;
    }
    if (other.Month != 0) {
      Month = other.Month;
    }
    if (other.Year != 0) {
      Year = other.Year;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Day = input.ReadInt32();
          break;
        }
        case 16: {
          Month = input.ReadInt32();
          break;
        }
        case 24: {
          Year = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Time : pb::IMessage<Time> {
  private static readonly pb::MessageParser<Time> _parser = new pb::MessageParser<Time>(() => new Time());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Time> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Time() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Time(Time other) : this() {
    hour_ = other.hour_;
    minute_ = other.minute_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Time Clone() {
    return new Time(this);
  }

  /// <summary>Field number for the "hour" field.</summary>
  public const int HourFieldNumber = 1;
  private int hour_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Hour {
    get { return hour_; }
    set {
      hour_ = value;
    }
  }

  /// <summary>Field number for the "minute" field.</summary>
  public const int MinuteFieldNumber = 2;
  private int minute_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Minute {
    get { return minute_; }
    set {
      minute_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Time);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Time other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Hour != other.Hour) return false;
    if (Minute != other.Minute) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Hour != 0) hash ^= Hour.GetHashCode();
    if (Minute != 0) hash ^= Minute.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Hour != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Hour);
    }
    if (Minute != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Minute);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Hour != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
    }
    if (Minute != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Time other) {
    if (other == null) {
      return;
    }
    if (other.Hour != 0) {
      Hour = other.Hour;
    }
    if (other.Minute != 0) {
      Minute = other.Minute;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Hour = input.ReadInt32();
          break;
        }
        case 16: {
          Minute = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class CursaDTO : pb::IMessage<CursaDTO> {
  private static readonly pb::MessageParser<CursaDTO> _parser = new pb::MessageParser<CursaDTO>(() => new CursaDTO());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CursaDTO> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDTO() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDTO(CursaDTO other) : this() {
    loc_ = other.loc_;
    jud_ = other.jud_;
    tar_ = other.tar_;
    Date = other.date_ != null ? other.Date.Clone() : null;
    Time = other.time_ != null ? other.Time.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDTO Clone() {
    return new CursaDTO(this);
  }

  /// <summary>Field number for the "loc" field.</summary>
  public const int LocFieldNumber = 1;
  private string loc_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Loc {
    get { return loc_; }
    set {
      loc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "jud" field.</summary>
  public const int JudFieldNumber = 2;
  private string jud_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Jud {
    get { return jud_; }
    set {
      jud_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "tar" field.</summary>
  public const int TarFieldNumber = 3;
  private string tar_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Tar {
    get { return tar_; }
    set {
      tar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "date" field.</summary>
  public const int DateFieldNumber = 4;
  private global::Date date_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Date Date {
    get { return date_; }
    set {
      date_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 5;
  private global::Time time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Time Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CursaDTO);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CursaDTO other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Loc != other.Loc) return false;
    if (Jud != other.Jud) return false;
    if (Tar != other.Tar) return false;
    if (!object.Equals(Date, other.Date)) return false;
    if (!object.Equals(Time, other.Time)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Loc.Length != 0) hash ^= Loc.GetHashCode();
    if (Jud.Length != 0) hash ^= Jud.GetHashCode();
    if (Tar.Length != 0) hash ^= Tar.GetHashCode();
    if (date_ != null) hash ^= Date.GetHashCode();
    if (time_ != null) hash ^= Time.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Loc.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Loc);
    }
    if (Jud.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Jud);
    }
    if (Tar.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Tar);
    }
    if (date_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Date);
    }
    if (time_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Time);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Loc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Loc);
    }
    if (Jud.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Jud);
    }
    if (Tar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Tar);
    }
    if (date_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
    }
    if (time_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CursaDTO other) {
    if (other == null) {
      return;
    }
    if (other.Loc.Length != 0) {
      Loc = other.Loc;
    }
    if (other.Jud.Length != 0) {
      Jud = other.Jud;
    }
    if (other.Tar.Length != 0) {
      Tar = other.Tar;
    }
    if (other.date_ != null) {
      if (date_ == null) {
        date_ = new global::Date();
      }
      Date.MergeFrom(other.Date);
    }
    if (other.time_ != null) {
      if (time_ == null) {
        time_ = new global::Time();
      }
      Time.MergeFrom(other.Time);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Loc = input.ReadString();
          break;
        }
        case 18: {
          Jud = input.ReadString();
          break;
        }
        case 26: {
          Tar = input.ReadString();
          break;
        }
        case 34: {
          if (date_ == null) {
            date_ = new global::Date();
          }
          input.ReadMessage(date_);
          break;
        }
        case 42: {
          if (time_ == null) {
            time_ = new global::Time();
          }
          input.ReadMessage(time_);
          break;
        }
      }
    }
  }

}

public sealed partial class Cursa : pb::IMessage<Cursa> {
  private static readonly pb::MessageParser<Cursa> _parser = new pb::MessageParser<Cursa>(() => new Cursa());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Cursa> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Cursa() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Cursa(Cursa other) : this() {
    cursaId_ = other.cursaId_;
    destinatieId_ = other.destinatieId_;
    Data = other.data_ != null ? other.Data.Clone() : null;
    Ora = other.ora_ != null ? other.Ora.Clone() : null;
    nrLocuri_ = other.nrLocuri_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Cursa Clone() {
    return new Cursa(this);
  }

  /// <summary>Field number for the "CursaId" field.</summary>
  public const int CursaIdFieldNumber = 1;
  private int cursaId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CursaId {
    get { return cursaId_; }
    set {
      cursaId_ = value;
    }
  }

  /// <summary>Field number for the "DestinatieId" field.</summary>
  public const int DestinatieIdFieldNumber = 2;
  private int destinatieId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DestinatieId {
    get { return destinatieId_; }
    set {
      destinatieId_ = value;
    }
  }

  /// <summary>Field number for the "Data" field.</summary>
  public const int DataFieldNumber = 3;
  private global::Date data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Date Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  /// <summary>Field number for the "Ora" field.</summary>
  public const int OraFieldNumber = 4;
  private global::Time ora_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Time Ora {
    get { return ora_; }
    set {
      ora_ = value;
    }
  }

  /// <summary>Field number for the "NrLocuri" field.</summary>
  public const int NrLocuriFieldNumber = 5;
  private int nrLocuri_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NrLocuri {
    get { return nrLocuri_; }
    set {
      nrLocuri_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Cursa);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Cursa other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CursaId != other.CursaId) return false;
    if (DestinatieId != other.DestinatieId) return false;
    if (!object.Equals(Data, other.Data)) return false;
    if (!object.Equals(Ora, other.Ora)) return false;
    if (NrLocuri != other.NrLocuri) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CursaId != 0) hash ^= CursaId.GetHashCode();
    if (DestinatieId != 0) hash ^= DestinatieId.GetHashCode();
    if (data_ != null) hash ^= Data.GetHashCode();
    if (ora_ != null) hash ^= Ora.GetHashCode();
    if (NrLocuri != 0) hash ^= NrLocuri.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CursaId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CursaId);
    }
    if (DestinatieId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(DestinatieId);
    }
    if (data_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Data);
    }
    if (ora_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Ora);
    }
    if (NrLocuri != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(NrLocuri);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CursaId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursaId);
    }
    if (DestinatieId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestinatieId);
    }
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (ora_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ora);
    }
    if (NrLocuri != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLocuri);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Cursa other) {
    if (other == null) {
      return;
    }
    if (other.CursaId != 0) {
      CursaId = other.CursaId;
    }
    if (other.DestinatieId != 0) {
      DestinatieId = other.DestinatieId;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::Date();
      }
      Data.MergeFrom(other.Data);
    }
    if (other.ora_ != null) {
      if (ora_ == null) {
        ora_ = new global::Time();
      }
      Ora.MergeFrom(other.Ora);
    }
    if (other.NrLocuri != 0) {
      NrLocuri = other.NrLocuri;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CursaId = input.ReadInt32();
          break;
        }
        case 16: {
          DestinatieId = input.ReadInt32();
          break;
        }
        case 26: {
          if (data_ == null) {
            data_ = new global::Date();
          }
          input.ReadMessage(data_);
          break;
        }
        case 34: {
          if (ora_ == null) {
            ora_ = new global::Time();
          }
          input.ReadMessage(ora_);
          break;
        }
        case 40: {
          NrLocuri = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Destinatie : pb::IMessage<Destinatie> {
  private static readonly pb::MessageParser<Destinatie> _parser = new pb::MessageParser<Destinatie>(() => new Destinatie());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Destinatie> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Destinatie() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Destinatie(Destinatie other) : this() {
    destinatieId_ = other.destinatieId_;
    localitate_ = other.localitate_;
    judet_ = other.judet_;
    tara_ = other.tara_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Destinatie Clone() {
    return new Destinatie(this);
  }

  /// <summary>Field number for the "DestinatieId" field.</summary>
  public const int DestinatieIdFieldNumber = 1;
  private int destinatieId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DestinatieId {
    get { return destinatieId_; }
    set {
      destinatieId_ = value;
    }
  }

  /// <summary>Field number for the "Localitate" field.</summary>
  public const int LocalitateFieldNumber = 2;
  private string localitate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Localitate {
    get { return localitate_; }
    set {
      localitate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Judet" field.</summary>
  public const int JudetFieldNumber = 3;
  private string judet_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Judet {
    get { return judet_; }
    set {
      judet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Tara" field.</summary>
  public const int TaraFieldNumber = 4;
  private string tara_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Tara {
    get { return tara_; }
    set {
      tara_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Destinatie);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Destinatie other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DestinatieId != other.DestinatieId) return false;
    if (Localitate != other.Localitate) return false;
    if (Judet != other.Judet) return false;
    if (Tara != other.Tara) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DestinatieId != 0) hash ^= DestinatieId.GetHashCode();
    if (Localitate.Length != 0) hash ^= Localitate.GetHashCode();
    if (Judet.Length != 0) hash ^= Judet.GetHashCode();
    if (Tara.Length != 0) hash ^= Tara.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DestinatieId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DestinatieId);
    }
    if (Localitate.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Localitate);
    }
    if (Judet.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Judet);
    }
    if (Tara.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Tara);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DestinatieId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestinatieId);
    }
    if (Localitate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Localitate);
    }
    if (Judet.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Judet);
    }
    if (Tara.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Tara);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Destinatie other) {
    if (other == null) {
      return;
    }
    if (other.DestinatieId != 0) {
      DestinatieId = other.DestinatieId;
    }
    if (other.Localitate.Length != 0) {
      Localitate = other.Localitate;
    }
    if (other.Judet.Length != 0) {
      Judet = other.Judet;
    }
    if (other.Tara.Length != 0) {
      Tara = other.Tara;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          DestinatieId = input.ReadInt32();
          break;
        }
        case 18: {
          Localitate = input.ReadString();
          break;
        }
        case 26: {
          Judet = input.ReadString();
          break;
        }
        case 34: {
          Tara = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CursaDestinatie : pb::IMessage<CursaDestinatie> {
  private static readonly pb::MessageParser<CursaDestinatie> _parser = new pb::MessageParser<CursaDestinatie>(() => new CursaDestinatie());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CursaDestinatie> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDestinatie() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDestinatie(CursaDestinatie other) : this() {
    Cursa = other.cursa_ != null ? other.Cursa.Clone() : null;
    Destinatie = other.destinatie_ != null ? other.Destinatie.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CursaDestinatie Clone() {
    return new CursaDestinatie(this);
  }

  /// <summary>Field number for the "cursa" field.</summary>
  public const int CursaFieldNumber = 1;
  private global::Cursa cursa_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Cursa Cursa {
    get { return cursa_; }
    set {
      cursa_ = value;
    }
  }

  /// <summary>Field number for the "destinatie" field.</summary>
  public const int DestinatieFieldNumber = 2;
  private global::Destinatie destinatie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Destinatie Destinatie {
    get { return destinatie_; }
    set {
      destinatie_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CursaDestinatie);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CursaDestinatie other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Cursa, other.Cursa)) return false;
    if (!object.Equals(Destinatie, other.Destinatie)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (cursa_ != null) hash ^= Cursa.GetHashCode();
    if (destinatie_ != null) hash ^= Destinatie.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (cursa_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Cursa);
    }
    if (destinatie_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Destinatie);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (cursa_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursa);
    }
    if (destinatie_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destinatie);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CursaDestinatie other) {
    if (other == null) {
      return;
    }
    if (other.cursa_ != null) {
      if (cursa_ == null) {
        cursa_ = new global::Cursa();
      }
      Cursa.MergeFrom(other.Cursa);
    }
    if (other.destinatie_ != null) {
      if (destinatie_ == null) {
        destinatie_ = new global::Destinatie();
      }
      Destinatie.MergeFrom(other.Destinatie);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (cursa_ == null) {
            cursa_ = new global::Cursa();
          }
          input.ReadMessage(cursa_);
          break;
        }
        case 18: {
          if (destinatie_ == null) {
            destinatie_ = new global::Destinatie();
          }
          input.ReadMessage(destinatie_);
          break;
        }
      }
    }
  }

}

public sealed partial class Rezervare : pb::IMessage<Rezervare> {
  private static readonly pb::MessageParser<Rezervare> _parser = new pb::MessageParser<Rezervare>(() => new Rezervare());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Rezervare> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rezervare() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rezervare(Rezervare other) : this() {
    rezervareId_ = other.rezervareId_;
    cursaId_ = other.cursaId_;
    numeClient_ = other.numeClient_;
    nrLocuriRezervate_ = other.nrLocuriRezervate_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rezervare Clone() {
    return new Rezervare(this);
  }

  /// <summary>Field number for the "RezervareId" field.</summary>
  public const int RezervareIdFieldNumber = 1;
  private int rezervareId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RezervareId {
    get { return rezervareId_; }
    set {
      rezervareId_ = value;
    }
  }

  /// <summary>Field number for the "CursaId" field.</summary>
  public const int CursaIdFieldNumber = 2;
  private int cursaId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CursaId {
    get { return cursaId_; }
    set {
      cursaId_ = value;
    }
  }

  /// <summary>Field number for the "NumeClient" field.</summary>
  public const int NumeClientFieldNumber = 3;
  private string numeClient_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NumeClient {
    get { return numeClient_; }
    set {
      numeClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "NrLocuriRezervate" field.</summary>
  public const int NrLocuriRezervateFieldNumber = 4;
  private int nrLocuriRezervate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NrLocuriRezervate {
    get { return nrLocuriRezervate_; }
    set {
      nrLocuriRezervate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Rezervare);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Rezervare other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RezervareId != other.RezervareId) return false;
    if (CursaId != other.CursaId) return false;
    if (NumeClient != other.NumeClient) return false;
    if (NrLocuriRezervate != other.NrLocuriRezervate) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RezervareId != 0) hash ^= RezervareId.GetHashCode();
    if (CursaId != 0) hash ^= CursaId.GetHashCode();
    if (NumeClient.Length != 0) hash ^= NumeClient.GetHashCode();
    if (NrLocuriRezervate != 0) hash ^= NrLocuriRezervate.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RezervareId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RezervareId);
    }
    if (CursaId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CursaId);
    }
    if (NumeClient.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(NumeClient);
    }
    if (NrLocuriRezervate != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(NrLocuriRezervate);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RezervareId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RezervareId);
    }
    if (CursaId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursaId);
    }
    if (NumeClient.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NumeClient);
    }
    if (NrLocuriRezervate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLocuriRezervate);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Rezervare other) {
    if (other == null) {
      return;
    }
    if (other.RezervareId != 0) {
      RezervareId = other.RezervareId;
    }
    if (other.CursaId != 0) {
      CursaId = other.CursaId;
    }
    if (other.NumeClient.Length != 0) {
      NumeClient = other.NumeClient;
    }
    if (other.NrLocuriRezervate != 0) {
      NrLocuriRezervate = other.NrLocuriRezervate;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RezervareId = input.ReadInt32();
          break;
        }
        case 16: {
          CursaId = input.ReadInt32();
          break;
        }
        case 26: {
          NumeClient = input.ReadString();
          break;
        }
        case 32: {
          NrLocuriRezervate = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Loc : pb::IMessage<Loc> {
  private static readonly pb::MessageParser<Loc> _parser = new pb::MessageParser<Loc>(() => new Loc());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Loc> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Loc() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Loc(Loc other) : this() {
    locId_ = other.locId_;
    nrLoc_ = other.nrLoc_;
    numeClient_ = other.numeClient_;
    cursaId_ = other.cursaId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Loc Clone() {
    return new Loc(this);
  }

  /// <summary>Field number for the "LocId" field.</summary>
  public const int LocIdFieldNumber = 1;
  private int locId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LocId {
    get { return locId_; }
    set {
      locId_ = value;
    }
  }

  /// <summary>Field number for the "NrLoc" field.</summary>
  public const int NrLocFieldNumber = 2;
  private int nrLoc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NrLoc {
    get { return nrLoc_; }
    set {
      nrLoc_ = value;
    }
  }

  /// <summary>Field number for the "NumeClient" field.</summary>
  public const int NumeClientFieldNumber = 3;
  private string numeClient_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NumeClient {
    get { return numeClient_; }
    set {
      numeClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CursaId" field.</summary>
  public const int CursaIdFieldNumber = 4;
  private int cursaId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CursaId {
    get { return cursaId_; }
    set {
      cursaId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Loc);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Loc other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LocId != other.LocId) return false;
    if (NrLoc != other.NrLoc) return false;
    if (NumeClient != other.NumeClient) return false;
    if (CursaId != other.CursaId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (LocId != 0) hash ^= LocId.GetHashCode();
    if (NrLoc != 0) hash ^= NrLoc.GetHashCode();
    if (NumeClient.Length != 0) hash ^= NumeClient.GetHashCode();
    if (CursaId != 0) hash ^= CursaId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (LocId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(LocId);
    }
    if (NrLoc != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(NrLoc);
    }
    if (NumeClient.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(NumeClient);
    }
    if (CursaId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(CursaId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (LocId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocId);
    }
    if (NrLoc != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLoc);
    }
    if (NumeClient.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NumeClient);
    }
    if (CursaId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CursaId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Loc other) {
    if (other == null) {
      return;
    }
    if (other.LocId != 0) {
      LocId = other.LocId;
    }
    if (other.NrLoc != 0) {
      NrLoc = other.NrLoc;
    }
    if (other.NumeClient.Length != 0) {
      NumeClient = other.NumeClient;
    }
    if (other.CursaId != 0) {
      CursaId = other.CursaId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          LocId = input.ReadInt32();
          break;
        }
        case 16: {
          NrLoc = input.ReadInt32();
          break;
        }
        case 26: {
          NumeClient = input.ReadString();
          break;
        }
        case 32: {
          CursaId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Request : pb::IMessage<Request> {
  private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request(Request other) : this() {
    type_ = other.type_;
    username_ = other.username_;
    User = other.user_ != null ? other.User.Clone() : null;
    Rez = other.rez_ != null ? other.Rez.Clone() : null;
    curse_ = other.curse_.Clone();
    Cursadto = other.cursadto_ != null ? other.Cursadto.Clone() : null;
    Cursa = other.cursa_ != null ? other.Cursa.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Request Clone() {
    return new Request(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::Request.Types.Type type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Request.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 2;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 3;
  private global::User user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "rez" field.</summary>
  public const int RezFieldNumber = 4;
  private global::Rezervare rez_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Rezervare Rez {
    get { return rez_; }
    set {
      rez_ = value;
    }
  }

  /// <summary>Field number for the "curse" field.</summary>
  public const int CurseFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CursaDestinatie> _repeated_curse_codec
      = pb::FieldCodec.ForMessage(42, global::CursaDestinatie.Parser);
  private readonly pbc::RepeatedField<global::CursaDestinatie> curse_ = new pbc::RepeatedField<global::CursaDestinatie>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CursaDestinatie> Curse {
    get { return curse_; }
  }

  /// <summary>Field number for the "cursadto" field.</summary>
  public const int CursadtoFieldNumber = 6;
  private global::CursaDTO cursadto_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CursaDTO Cursadto {
    get { return cursadto_; }
    set {
      cursadto_ = value;
    }
  }

  /// <summary>Field number for the "cursa" field.</summary>
  public const int CursaFieldNumber = 7;
  private global::Cursa cursa_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Cursa Cursa {
    get { return cursa_; }
    set {
      cursa_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Username != other.Username) return false;
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Rez, other.Rez)) return false;
    if(!curse_.Equals(other.curse_)) return false;
    if (!object.Equals(Cursadto, other.Cursadto)) return false;
    if (!object.Equals(Cursa, other.Cursa)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (user_ != null) hash ^= User.GetHashCode();
    if (rez_ != null) hash ^= Rez.GetHashCode();
    hash ^= curse_.GetHashCode();
    if (cursadto_ != null) hash ^= Cursadto.GetHashCode();
    if (cursa_ != null) hash ^= Cursa.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Username);
    }
    if (user_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(User);
    }
    if (rez_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Rez);
    }
    curse_.WriteTo(output, _repeated_curse_codec);
    if (cursadto_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Cursadto);
    }
    if (cursa_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Cursa);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (rez_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rez);
    }
    size += curse_.CalculateSize(_repeated_curse_codec);
    if (cursadto_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursadto);
    }
    if (cursa_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursa);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Request other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        user_ = new global::User();
      }
      User.MergeFrom(other.User);
    }
    if (other.rez_ != null) {
      if (rez_ == null) {
        rez_ = new global::Rezervare();
      }
      Rez.MergeFrom(other.Rez);
    }
    curse_.Add(other.curse_);
    if (other.cursadto_ != null) {
      if (cursadto_ == null) {
        cursadto_ = new global::CursaDTO();
      }
      Cursadto.MergeFrom(other.Cursadto);
    }
    if (other.cursa_ != null) {
      if (cursa_ == null) {
        cursa_ = new global::Cursa();
      }
      Cursa.MergeFrom(other.Cursa);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          type_ = (global::Request.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          Username = input.ReadString();
          break;
        }
        case 26: {
          if (user_ == null) {
            user_ = new global::User();
          }
          input.ReadMessage(user_);
          break;
        }
        case 34: {
          if (rez_ == null) {
            rez_ = new global::Rezervare();
          }
          input.ReadMessage(rez_);
          break;
        }
        case 42: {
          curse_.AddEntriesFrom(input, _repeated_curse_codec);
          break;
        }
        case 50: {
          if (cursadto_ == null) {
            cursadto_ = new global::CursaDTO();
          }
          input.ReadMessage(cursadto_);
          break;
        }
        case 58: {
          if (cursa_ == null) {
            cursa_ = new global::Cursa();
          }
          input.ReadMessage(cursa_);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Request message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("LOGIN")] Login = 0,
      [pbr::OriginalName("LOGOUT")] Logout = 1,
      [pbr::OriginalName("GET_CURSE")] GetCurse = 2,
      [pbr::OriginalName("GET_LOCURI")] GetLocuri = 3,
      [pbr::OriginalName("ADD_REZERVARE")] AddRezervare = 4,
      [pbr::OriginalName("GET_USER")] GetUser = 5,
      [pbr::OriginalName("GET_CURSA")] GetCursa = 6,
    }

  }
  #endregion

}

public sealed partial class Response : pb::IMessage<Response> {
  private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FirmaTrReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response(Response other) : this() {
    type_ = other.type_;
    error_ = other.error_;
    User = other.user_ != null ? other.User.Clone() : null;
    ok_ = other.ok_;
    curse_ = other.curse_.Clone();
    Cursa = other.cursa_ != null ? other.Cursa.Clone() : null;
    locuri_ = other.locuri_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response Clone() {
    return new Response(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::Response.Types.Type type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Response.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private string error_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Error {
    get { return error_; }
    set {
      error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 3;
  private global::User user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "ok" field.</summary>
  public const int OkFieldNumber = 4;
  private string ok_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Ok {
    get { return ok_; }
    set {
      ok_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "curse" field.</summary>
  public const int CurseFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CursaDestinatie> _repeated_curse_codec
      = pb::FieldCodec.ForMessage(42, global::CursaDestinatie.Parser);
  private readonly pbc::RepeatedField<global::CursaDestinatie> curse_ = new pbc::RepeatedField<global::CursaDestinatie>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CursaDestinatie> Curse {
    get { return curse_; }
  }

  /// <summary>Field number for the "cursa" field.</summary>
  public const int CursaFieldNumber = 6;
  private global::Cursa cursa_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Cursa Cursa {
    get { return cursa_; }
    set {
      cursa_ = value;
    }
  }

  /// <summary>Field number for the "locuri" field.</summary>
  public const int LocuriFieldNumber = 7;
  private static readonly pb::FieldCodec<global::Loc> _repeated_locuri_codec
      = pb::FieldCodec.ForMessage(58, global::Loc.Parser);
  private readonly pbc::RepeatedField<global::Loc> locuri_ = new pbc::RepeatedField<global::Loc>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Loc> Locuri {
    get { return locuri_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Error != other.Error) return false;
    if (!object.Equals(User, other.User)) return false;
    if (Ok != other.Ok) return false;
    if(!curse_.Equals(other.curse_)) return false;
    if (!object.Equals(Cursa, other.Cursa)) return false;
    if(!locuri_.Equals(other.locuri_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Error.Length != 0) hash ^= Error.GetHashCode();
    if (user_ != null) hash ^= User.GetHashCode();
    if (Ok.Length != 0) hash ^= Ok.GetHashCode();
    hash ^= curse_.GetHashCode();
    if (cursa_ != null) hash ^= Cursa.GetHashCode();
    hash ^= locuri_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Error.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Error);
    }
    if (user_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(User);
    }
    if (Ok.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Ok);
    }
    curse_.WriteTo(output, _repeated_curse_codec);
    if (cursa_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Cursa);
    }
    locuri_.WriteTo(output, _repeated_locuri_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Error.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
    }
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (Ok.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ok);
    }
    size += curse_.CalculateSize(_repeated_curse_codec);
    if (cursa_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursa);
    }
    size += locuri_.CalculateSize(_repeated_locuri_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Response other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Error.Length != 0) {
      Error = other.Error;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        user_ = new global::User();
      }
      User.MergeFrom(other.User);
    }
    if (other.Ok.Length != 0) {
      Ok = other.Ok;
    }
    curse_.Add(other.curse_);
    if (other.cursa_ != null) {
      if (cursa_ == null) {
        cursa_ = new global::Cursa();
      }
      Cursa.MergeFrom(other.Cursa);
    }
    locuri_.Add(other.locuri_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          type_ = (global::Response.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          Error = input.ReadString();
          break;
        }
        case 26: {
          if (user_ == null) {
            user_ = new global::User();
          }
          input.ReadMessage(user_);
          break;
        }
        case 34: {
          Ok = input.ReadString();
          break;
        }
        case 42: {
          curse_.AddEntriesFrom(input, _repeated_curse_codec);
          break;
        }
        case 50: {
          if (cursa_ == null) {
            cursa_ = new global::Cursa();
          }
          input.ReadMessage(cursa_);
          break;
        }
        case 58: {
          locuri_.AddEntriesFrom(input, _repeated_locuri_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("OK")] Ok = 0,
      [pbr::OriginalName("ERROR")] Error = 1,
      [pbr::OriginalName("GET_CURSE")] GetCurse = 2,
      [pbr::OriginalName("ADDED_REZERVARE")] AddedRezervare = 3,
      [pbr::OriginalName("GET_LOCURI")] GetLocuri = 4,
      [pbr::OriginalName("UPDATED")] Updated = 5,
      [pbr::OriginalName("GET_CURSA")] GetCursa = 6,
      [pbr::OriginalName("GET_USER")] GetUser = 7,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
